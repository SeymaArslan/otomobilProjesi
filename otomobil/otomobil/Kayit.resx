<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xO8xktqFXUP+V//Z
</value>
  </data>
</root>